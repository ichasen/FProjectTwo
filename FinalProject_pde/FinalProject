//Pitch p = new Pitch();
//PitchMeter meter = new PitchMeter();
//Runner r = new Runner();

int hitboxCoordinates;
int meterCoordinates;

boolean alreadyPressed = false;

String winner;
int numStrikes = 0;
int baseNumber;
int score;

Base[] bases = new Base[4];

public void setup(){
  size(700,700);
  bases[0] = new Base(1, 410, 410); //Southeast
  bases[1] = new Base(2,410, 10); //Northeast
  bases[2] = new Base(3,10,10); //Northwest
  bases[3] = new Base(4,10,410); //Southwest
}

public void draw(){
  //Dark green background
  background(10,103,0);
  textSize(50);
  for (int i = 0; i < 4; i++){
    bases[i].display();
  }
  HitterMeter daMeter = new HitterMeter('a');
  daMeter.display();
}

public class Base{
  float x, y; 
  int baseNum;
  color c;
  
  public Base(int _baseNum, float _x, float _y){
    c = color(255);
    x = _x;
    y = _y;
    baseNum = _baseNum;
  }
  
  public void display(){
    fill(c);
    rect(x,y,40,40);
  }
  
}

public class HitterMeter{
  
  //Length of each bound, depending on the type of hitter.
  float strikeLength;
  float singleLength;
  float doubleLength;
  float tripleLength;
  float homerunLength;
  
  //Bounds for the rectangle
  float[][] strikeCoors;
  float[][] singleCoors;
  float[][] doubleCoors;
  float[][] tripleCoors;
  float[][] homerunCoors;
  
  int speed;
  
  //Hardest hitter:
  final float[][] bStrikeCoors = {{0,175},{526,700}};
  final float[][] bSingleCoors = {{176,210},{491,525}};
  final float[][] bDoubleCoors = {{211,245},{456,490}};
  final float[][] bTripleCoors = {{246,280},{421,455}};
  final float[][] bHomerunCoors = {{281,520}};
  
  //Average hitter:
  final float[][] aStrikeCoors = {{0,231},{469,700}}; 
  final float[][] aSingleCoors = {{232,280},{420,486}};
  final float[][] aDoubleCoors = {{281,315},{385,419}};
  final float[][] aTripleCoors = {{316,340},{360,384}};
  final float[][] aHomerunCoors = {{341,359}};
  
  public HitterMeter(char hitterIdentity){
    //Hardest hitter
    if (hitterIdentity == 'b'){
      strikeCoors = bStrikeCoors;
      singleCoors = bSingleCoors;
      doubleCoors = bDoubleCoors;
      tripleCoors = bTripleCoors;
      homerunCoors = bHomerunCoors;
      speed = 60;
      strikeLength = 175;
      singleLength = 35;
      doubleLength = 35;
      tripleLength = 35;
      homerunLength = 70;
    }
    //Average hitter
    if (hitterIdentity == 'a'){
      strikeCoors = bStrikeCoors;
      singleCoors = bSingleCoors;
      doubleCoors = bDoubleCoors;
      tripleCoors = bTripleCoors;
      homerunCoors = bHomerunCoors;
      speed = 40;
      strikeLength = 230;
      singleLength = 49;
      doubleLength = 35;
      tripleLength = 24;
      homerunLength = 25;
    }
  }
  
  public void display(){
    for (int i = 0; i < 2; i++){
    //Strike
    fill(255,0,0);
    rect(0,600,strikeLength,100);
    rect(700,600,-1 * strikeLength,100);
    
    //Single
    fill(0,255,0);
    rect(strikeLength,600,singleLength,100);
    rect(700-strikeLength,600, - 1 * singleLength, 100);
    
    //Double
    fill(128,0,128);
    rect(singleLength + strikeLength,600,doubleLength,100);
    rect(700 - strikeLength - singleLength,600, -1 * doubleLength, 100);
    
    //Triple
    fill(0,255,255);
    rect(strikeLength + singleLength + doubleLength,600,tripleLength,100);
    rect(700 - strikeLength - singleLength - doubleLength,600,-1 * tripleLength, 100);
    
    fill(212,175,55);
    rect(strikeLength + singleLength + doubleLength + tripleLength,600,homerunLength,100);
    
   
  }
}
  
  public int keyPressed(){
    if (key == ' '){
      speed = 0;
    }
    return 0;
  }
  
  public void setSpeed(int newSpeed){
    speed = newSpeed;
  }
  
}
  

